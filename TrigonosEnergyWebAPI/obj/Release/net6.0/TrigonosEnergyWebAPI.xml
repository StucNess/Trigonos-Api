<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TrigonosEnergyWebAPI</name>
    </assembly>
    <members>
        <member name="T:Facturacion.cl.logininfo">
            <remarks/>
        </member>
        <member name="P:Facturacion.cl.logininfo.Usuario">
            <remarks/>
        </member>
        <member name="P:Facturacion.cl.logininfo.Rut">
            <remarks/>
        </member>
        <member name="P:Facturacion.cl.logininfo.Clave">
            <remarks/>
        </member>
        <member name="P:Facturacion.cl.logininfo.Puerto">
            <remarks/>
        </member>
        <member name="P:Facturacion.cl.logininfo.IncluyeLink">
            <remarks/>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.ComboBoxController.GetReception">
            <summary>
            Api para llenar datos de los ComboBox
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.FacturacionClController.GetPaginationFacturacionCl(System.Int32,System.Int32)">
            <summary>
            Obtener la facturacion cl con paginacion
            </summary>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.FacturacionClController.GetAllEncodeFacturacionCl">
            <summary>
            Obtener la facturacion cl sin paginacion y sin decodificacion
            </summary>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.FacturacionClController.GetAllDecodeFacturacionCl">
            <summary>
            obtener sin paginacion y decodificado
            </summary>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.FacturacionClController.AgregarFacturacion(TrigonosEnergyWebAPI.DTO.AgregarFactCl)">
            <summary>
            agregar la facturacion cl 
            </summary>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.FacturacionClController.ActualizarFacturacion(TrigonosEnergyWebAPI.DTO.AgregarFactCl)">
            <summary>
            Actualizar la facturacion cl 
            </summary>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.FacturacionClController.GetDecodeFacturacionCl(System.Int32)">
            <summary>
            obtener una facturacion especifica por id de participante
            </summary>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.InstruccionesController.PRUEBA1">
            <summary>
            Obtener la glosa de todas las instrucciones
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.InstruccionesController.GetInstrucciones(System.Int32,Core.Specifications.Params.InstruccionesSpecificationParams)">
            <summary>
            Obtener todas las instrucciones de un participante
            </summary>
            <param name="id"> ID del participante</param>
            <param name="parametros.FechaEmision.FechaEmision"> gola</param>
            
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.InstruccionesController.Updatee(System.Int32,Core.Specifications.Params.PatchInstruccionesParams)">
            <summary>
            Modificar datos de una instruccion especifica
            </summary>
            <param name="id">ID de la instruccion</param>
            <param name="parametros"> hola </param>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.InstruccionesController.CountingConcept(System.Int32,Core.Specifications.Params.InstruccionesDefSpecificationParams)">
            <summary>
            Obtener la cantidad del concepto para luego iterar y saber cuantas llamadas hacer al filtro
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.InstruccionesController.CountingCodRef(System.Int32,Core.Specifications.Params.InstruccionesDefSpecificationParams)">
            <summary>
            Obtener la cantidad del Cod Ref para luego iterar y saber cuantas llamadas hacer al filtro
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.InstruccionesController.CountingCarta(System.Int32,Core.Specifications.Params.InstruccionesDefSpecificationParams)">
            <summary>
            Obtener la cantidad de la carta para luego iterar y saber cuantas llamadas hacer al filtro
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.InstruccionesController.ConceptFilter(System.Int32,System.Int32,Core.Specifications.Params.InstruccionesDefSpecificationParams)">
            <summary>
            Obtener El concepto de un participante especifico
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.InstruccionesController.CodRefFilter(System.Int32,System.Int32,Core.Specifications.Params.InstruccionesDefSpecificationParams)">
            <summary>
            Obtener El concepto de un participante especifico
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.InstruccionesController.CartaFilter(System.Int32,System.Int32,Core.Specifications.Params.InstruccionesDefSpecificationParams)">
            <summary>
            Obtener la carta de un participante especifico
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.NominasController.GetAllNominaPago">
            <summary>
            Obtener nominas que trabaja Prisma
            </summary>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.NominasController.GetAllFacturadorERP">
            <summary>
            Obtener nominas que trabaja Prisma
            </summary>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.UsuariosController.GetUsuario">
            <summary>
            Devuelve datos de usuario al logearse con su token
            </summary>M
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.UsuariosController.GetUsuarios(Core.Specifications.Params.UsuarioSpecificationParams)">
            <summary>
            Devulve a todos los usuarios
            </summary>
            <param name="usuarioParams"></param>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.UsuariosController.GetUsuarioBy(System.String)">
            <summary>
            Obtener datos del usuario con su id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.UsuariosController.AsignarProyecto(TrigonosEnergyWebAPI.DTO.AsignarProyectoDto)">
            <summary>
            Asigna a usuario permiso para administrar un proyecto
            </summary>
            <param name="asignarProyectoDto"></param>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.UsuariosController.Login(TrigonosEnergyWebAPI.DTO.LoginDto)">
            <summary>
            Retorna datos del usuario al ingresar sus credenciales
            </summary>
            <param name="loginDto"></param>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.UsuariosController.Registrar(TrigonosEnergyWebAPI.DTO.RegistrarDto)">
            <summary>
            Registrar un nuevo usuario
            </summary>
            <param name="registrarDto"></param>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.UsuariosController.Actualizar(System.String,TrigonosEnergyWebAPI.DTO.ActualizarUserDto)">
            <summary>
            Actualizar datos de un usuario
            </summary>
            <param name="id"></param>
            <param name="registrarDto"></param>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.UsuariosController.UpdateRole(System.String,TrigonosEnergyWebAPI.DTO.RoleDto)">
            <summary>
            Actualiza el rol de un usuario
            </summary>
            <param name="id"></param>
            <param name="roleParam"></param>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergyWebAPI.Controllers.UsuariosController.RecuperarContrasena(TrigonosEnergyWebAPI.DTO.ActualizarContrasenaDto)">
            <summary>
            Recuperar contrase√±a
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.GetParticipantes(System.String,Core.Specifications.Params.ParticipantsParams)">
            <summary>
            Obtener a los participantes de TRGNS o a todos los del CEN
            </summary>
            <param name="parametros"></param>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.CantidadParticipantes">
            <summary>
            Cantidad de participantes
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.CantidadProyectos">
            <summary>
            Cantidad de proyectos
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.CantidadFactCl">
            <summary>
            Cantidad de participantes con facturacion cl
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.ProyectosById(System.Int32)">
            <summary>
            Retorna si es de bluetree o es externo
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.GetAgentesTotal">
            <summary>
            Retorna la cantidad de agentes en total
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.GetAgentesOfParticipants(Core.Specifications.Params.AgentesSpecificationParams)">
            <summary>
            Retorna los agentes asociados a un participante
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.GetAllProyectos">
            <summary>
            Retorna todos los si es de bluetree o es externo
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.ActivarProyectoById(TrigonosEnergyWebAPI.DTO.ActualizarProyectos)">
            <summary>
            actualizaci√≥n dinamica de los participantes en la tabla proyectos
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.ActualizarProyectoById(System.Int32)">
            <summary>
            actualiza para agregar como bluetree
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.DesactivarProyectoById(System.Int32)">
            <summary>
            actualiza para eliminar de clientes bluetree (desactivar)
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.PRUEBA">
            <summary>
            Obtener el nombre comercial de todos los participantes
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.PRUEBA1">
            <summary>
            Obtener el rut de todos los participantes
            </summary>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.GetParticipante(System.Int32,Core.Specifications.Params.ParticipantsParamsID)">
            <summary>
            Obtener un participante especifico
            </summary>
            <param name="id"> ID del participante</param>
            <returns></returns>
        </member>
        <member name="M:TrigonosEnergy.Controllers.ParticipantesController.Update(System.Int32,Core.Specifications.Params.PatchParticipantsParams)">
            <summary>
            Actualizar datos de un participante
            </summary>
            <param name="id">ID del participante</param>
            <param name="parametros"></param>
            <returns></returns>
        </member>
    </members>
</doc>
